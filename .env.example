# Example environment file for docker-compose
# Copy this to .env and modify as needed

# Port for the API server
PORT=5005

# Version tag for the Docker image
VERSION=1.0.1

# External preset directory path (optional)
# Uncomment and set this to use presets from outside the container
# HOST_PRESET_PATH=/path/to/your/presets

# Log level (error, warn, info, debug)
LOG_LEVEL=info

# Logger type (winston or pino)
# winston: Full-featured logger with colors in development, JSON in production
# pino: High-performance JSON logger with consistent field ordering
# Default: winston for development, pino for production
# LOGGER=pino

# Log format (simple or json) - DEPRECATED, use LOGGER instead
# simple: Colorized human-readable format (default for development)
# json: Structured JSON format (default for production)
# LOG_FORMAT=json

# Debug level (error, warn, info, debug, wall)
# wall: Most verbose, includes SOAP XML responses
# DEBUG_LEVEL=debug

# Debug categories (comma-separated)
# Available: soap, topology, discovery, favorites, presets, upnp, api, sse
# Special values: all (enables all categories)
# Example: DEBUG_CATEGORIES=api,discovery,soap
# DEBUG_CATEGORIES=all

# TTS Host IP Configuration (REQUIRED for Docker)
# The IP address that Sonos devices can use to reach this server
# This is critical for TTS (text-to-speech) functionality
# 
# For Docker with host networking:
#   - Set this to your Docker host's IP address (not the container IP)
#   - Example: TTS_HOST_IP=192.168.1.100
# 
# For local development:
#   - Leave unset - the API will auto-detect your IP
#   - Or set it manually if auto-detection fails
# 
# Note: Sonos devices cannot reach 'localhost' or container-internal IPs
# TTS_HOST_IP=192.168.1.100

# ===========================================
# Music Service Credentials
# ===========================================

# Spotify OAuth Configuration
# Required for Spotify search and browse functionality
# 
# 1. Create a Spotify app at https://developer.spotify.com/dashboard
# 2. Add your redirect URI to the app settings (must match exactly):
#    - For production: https://your-domain.com/spotify/callback
#    - For local dev: http://localhost:5005/spotify/callback
# 3. Copy the Client ID and Client Secret below
# 
# SPOTIFY_CLIENT_ID=your-spotify-client-id
# SPOTIFY_CLIENT_SECRET=your-spotify-client-secret
# SPOTIFY_REDIRECT_URI=http://localhost:5005/spotify/callback
# 
# Optional: Pre-configured refresh token (obtained after OAuth flow)
# If not set, visit /spotify/auth to authenticate
# SPOTIFY_REFRESH_TOKEN=your-refresh-token
# 
# Optional: Instance identifier for multi-home deployments
# INSTANCE_ID=host-identifier

# Pandora Configuration (optional)
# Required for Pandora station playback
# PANDORA_USERNAME=your-pandora-email@example.com
# PANDORA_PASSWORD=your-pandora-password

# ===========================================
# Music Library Configuration
# ===========================================
# How often to reindex the music library
# LIBRARY_REINDEX_INTERVAL=1 week

# Maximum tracks to queue when searching for an artist
# Default: 100
# LIBRARY_RANDOM_QUEUE_LIMIT=100

# ===========================================
# Docker Volume Mounts
# ===========================================
# Mount presets from host (read-only)
# HOST_PRESET_PATH=/path/to/host/presets

# Mount data directory for persistence (RECOMMENDED)
# This preserves Spotify tokens, defaults, and caches between container restarts
# HOST_DATA_PATH=./data